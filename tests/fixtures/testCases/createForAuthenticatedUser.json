{
  "openapi": "3.1.0",
  "info": {
    "version": "1.1.4"
  },
  "tags": [
    {
      "name": "codespaces",
      "description": "Endpoints to manage Codespaces using the REST API."
    }
  ],
  "paths": {
    "/user/codespaces": {
      "post": {
        "operationId": "codespaces/create-for-authenticated-user",
        "summary": "Create a codespace for the authenticated user",
        "description": "Creates a new codespace, owned by the authenticated user.\n\nThis endpoint requires either a `repository_id` OR a `pull_request` but not both.\n\nYou must authenticate using an access token with the `codespace` scope to use this endpoint.\n\nGitHub Apps must have write access to the `codespaces` repository permission to use this endpoint.",
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.github.com/rest/reference/codespaces#create-a-codespace-for-the-authenticated-user",
          "description": "API method documentation"
        },
        "tags": [
          "codespaces"
        ],
        "responses": {
          "201": {
            "description": "Response when the codespace was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/codespace"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/codespace"
                  }
                }
              }
            }
          },
          "202": {
            "description": "Response when the codespace creation partially failed but is being retried in the background",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/codespace"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/codespace"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": "Requires authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": "Resource not found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "repository_id"
                    ],
                    "properties": {
                      "ref": {
                        "type": "string",
                        "description": "Git ref (typically a branch name) for this codespace"
                      },
                      "machine": {
                        "type": "string",
                        "description": "Machine type to use for this codespace"
                      },
                      "location": {
                        "type": "string",
                        "description": "Location for this codespace. Assigned by IP if not provided"
                      },
                      "client_ip": {
                        "type": "string",
                        "description": "IP for location auto-detection when proxying a request"
                      },
                      "display_name": {
                        "type": "string",
                        "description": "Display name for this codespace"
                      },
                      "repository_id": {
                        "type": "integer",
                        "description": "Repository id for this codespace"
                      },
                      "devcontainer_path": {
                        "type": "string",
                        "description": "Path to devcontainer.json config to use for this codespace"
                      },
                      "working_directory": {
                        "type": "string",
                        "description": "Working directory for this codespace"
                      },
                      "idle_timeout_minutes": {
                        "type": "integer",
                        "description": "Time in minutes before codespace stops from inactivity"
                      },
                      "retention_period_minutes": {
                        "type": "integer",
                        "description": "Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 43200 (30 days)."
                      },
                      "multi_repo_permissions_opt_out": {
                        "type": "boolean",
                        "description": "Whether to authorize requested permissions from devcontainer.json"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "pull_request"
                    ],
                    "properties": {
                      "machine": {
                        "type": "string",
                        "description": "Machine type to use for this codespace"
                      },
                      "location": {
                        "type": "string",
                        "description": "Location for this codespace. Assigned by IP if not provided"
                      },
                      "pull_request": {
                        "type": "object",
                        "required": [
                          "pull_request_number",
                          "repository_id"
                        ],
                        "properties": {
                          "repository_id": {
                            "type": "integer",
                            "description": "Repository id for this codespace"
                          },
                          "pull_request_number": {
                            "type": "integer",
                            "description": "Pull request number"
                          }
                        },
                        "description": "Pull request number for this codespace"
                      },
                      "devcontainer_path": {
                        "type": "string",
                        "description": "Path to devcontainer.json config to use for this codespace"
                      },
                      "working_directory": {
                        "type": "string",
                        "description": "Working directory for this codespace"
                      },
                      "idle_timeout_minutes": {
                        "type": "integer",
                        "description": "Time in minutes before codespace stops from inactivity"
                      }
                    }
                  }
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "ref": "main",
                    "location": "WestUs2",
                    "repository_id": 1
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "category": "codespaces",
          "subcategory": null,
          "githubCloudOnly": false,
          "enabledForGitHubApps": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "basic-error": {
        "type": "object",
        "title": "Basic Error",
        "properties": {
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          }
        },
        "description": "Basic Error"
      },
      "codespace": {
        "type": "object",
        "title": "Codespace",
        "required": [
          "id",
          "name",
          "environment_id",
          "owner",
          "billable_owner",
          "repository",
          "machine",
          "prebuild",
          "created_at",
          "updated_at",
          "last_used_at",
          "state",
          "url",
          "git_status",
          "location",
          "idle_timeout_minutes",
          "web_url",
          "machines_url",
          "start_url",
          "stop_url",
          "pulls_url",
          "recent_folders"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "examples": [
              1
            ]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "API URL for this codespace."
          },
          "name": {
            "type": "string",
            "examples": [
              "monalisa-octocat-hello-world-g4wpq6h95q"
            ],
            "description": "Automatically generated name of this codespace."
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "state": {
            "enum": [
              "Unknown",
              "Created",
              "Queued",
              "Provisioning",
              "Available",
              "Awaiting",
              "Unavailable",
              "Deleted",
              "Moved",
              "Shutdown",
              "Archived",
              "Starting",
              "ShuttingDown",
              "Failed",
              "Exporting",
              "Updating",
              "Rebuilding"
            ],
            "type": "string",
            "examples": [
              "Available"
            ],
            "description": "State of this codespace."
          },
          "machine": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/codespace-machine"
              }
            ]
          },
          "web_url": {
            "type": "string",
            "format": "uri",
            "description": "URL to access this codespace on the web."
          },
          "location": {
            "enum": [
              "EastUs",
              "SouthEastAsia",
              "WestEurope",
              "WestUs2"
            ],
            "type": "string",
            "examples": [
              "WestUs2"
            ],
            "description": "The Azure region where this codespace is located."
          },
          "prebuild": {
            "type": [
              "boolean",
              "null"
            ],
            "examples": [
              false
            ],
            "description": "Whether the codespace was created from a prebuild."
          },
          "stop_url": {
            "type": "string",
            "format": "uri",
            "description": "API URL to stop this codespace."
          },
          "pulls_url": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri",
            "description": "API URL for the Pull Request associated with this codespace, if any."
          },
          "start_url": {
            "type": "string",
            "format": "uri",
            "description": "API URL to start this codespace."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2011-01-26T19:01:12Z"
            ]
          },
          "git_status": {
            "type": "object",
            "properties": {
              "ref": {
                "type": "string",
                "examples": [
                  "main"
                ],
                "description": "The current branch (or SHA if in detached HEAD state) of the local repository."
              },
              "ahead": {
                "type": "integer",
                "examples": [
                  0
                ],
                "description": "The number of commits the local repository is ahead of the remote."
              },
              "behind": {
                "type": "integer",
                "examples": [
                  0
                ],
                "description": "The number of commits the local repository is behind the remote."
              },
              "has_unpushed_changes": {
                "type": "boolean",
                "description": "Whether the local repository has unpushed changes."
              },
              "has_uncommitted_changes": {
                "type": "boolean",
                "description": "Whether the local repository has uncommitted changes."
              }
            },
            "description": "Details about the codespace's git repository."
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2011-01-26T19:01:12Z"
            ]
          },
          "display_name": {
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "bookish space pancake"
            ],
            "description": "Display name for this codespace."
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2011-01-26T19:01:12Z"
            ],
            "description": "Last known time this codespace was started."
          },
          "machines_url": {
            "type": "string",
            "format": "uri",
            "description": "API URL to access available alternate machine types for this codespace."
          },
          "billable_owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "environment_id": {
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "26a7c758-7299-4a73-b978-5a92a7ae98a0"
            ],
            "description": "UUID identifying this codespace's environment."
          },
          "recent_folders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "devcontainer_path": {
            "type": [
              "string",
              "null"
            ],
            "examples": [
              ".devcontainer/example/devcontainer.json"
            ],
            "description": "Path to devcontainer.json from repo root used to create Codespace."
          },
          "pending_operation": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Whether or not a codespace has a pending async operation. This would mean that the codespace is temporarily unavailable. The only thing that you can do with a codespace in this state is delete it."
          },
          "idle_timeout_notice": {
            "type": [
              "string",
              "null"
            ],
            "description": "Text to show user when codespace idle timeout minutes has been overriden by an organization policy"
          },
          "runtime_constraints": {
            "type": "object",
            "properties": {
              "allowed_port_privacy_settings": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": "string"
                },
                "description": "The privacy settings a user can select from when forwarding a port."
              }
            }
          },
          "idle_timeout_minutes": {
            "type": [
              "integer",
              "null"
            ],
            "examples": [
              60
            ],
            "description": "The number of minutes of inactivity after which this codespace will be automatically stopped."
          },
          "pending_operation_disabled_reason": {
            "type": [
              "string",
              "null"
            ],
            "description": "Text to show user when codespace is disabled by a pending operation"
          }
        },
        "description": "A codespace."
      },
      "simple-user": {
        "type": "object",
        "title": "Simple User",
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "examples": [
              1
            ]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/users/octocat"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "type": {
            "type": "string",
            "examples": [
              "User"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "login": {
            "type": "string",
            "examples": [
              "octocat"
            ]
          },
          "node_id": {
            "type": "string",
            "examples": [
              "MDQ6VXNlcjE="
            ]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat"
            ]
          },
          "gists_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/gists{/gist_id}"
            ]
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/users/octocat/repos"
            ]
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/images/error/octocat_happy.gif"
            ]
          },
          "events_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/events{/privacy}"
            ]
          },
          "site_admin": {
            "type": "boolean"
          },
          "starred_at": {
            "type": "string",
            "examples": [
              "\"2020-07-09T00:17:55Z\""
            ]
          },
          "gravatar_id": {
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "41d064eb2195891e12d0413f63227ea7"
            ]
          },
          "starred_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/starred{/owner}{/repo}"
            ]
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/users/octocat/followers"
            ]
          },
          "following_url": {
            "type": "string",
            "examples": [
              "https://api.github.com/users/octocat/following{/other_user}"
            ]
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/users/octocat/orgs"
            ]
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/users/octocat/subscriptions"
            ]
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/users/octocat/received_events"
            ]
          }
        },
        "description": "Simple User"
      },
      "codespace-machine": {
        "type": "object",
        "title": "Codespace machine",
        "required": [
          "name",
          "display_name",
          "operating_system",
          "storage_in_bytes",
          "memory_in_bytes",
          "cpus",
          "prebuild_availability"
        ],
        "properties": {
          "cpus": {
            "type": "integer",
            "examples": [
              4
            ],
            "description": "How many cores are available to the codespace."
          },
          "name": {
            "type": "string",
            "examples": [
              "standardLinux"
            ],
            "description": "The name of the machine."
          },
          "display_name": {
            "type": "string",
            "examples": [
              "4 cores, 8 GB RAM, 64 GB storage"
            ],
            "description": "The display name of the machine includes cores, memory, and storage."
          },
          "memory_in_bytes": {
            "type": "integer",
            "examples": [
              8589934592
            ],
            "description": "How much memory is available to the codespace."
          },
          "operating_system": {
            "type": "string",
            "examples": [
              "linux"
            ],
            "description": "The operating system of the machine."
          },
          "storage_in_bytes": {
            "type": "integer",
            "examples": [
              68719476736
            ],
            "description": "How much storage is available to the codespace."
          },
          "prebuild_availability": {
            "enum": [
              "none",
              "ready",
              "in_progress",
              null
            ],
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "ready"
            ],
            "description": "Whether a prebuild is currently available when creating a codespace for this machine and repository. If a branch was not specified as a ref, the default branch will be assumed. Value will be \"null\" if prebuilds are not supported or prebuild availability could not be determined. Value will be \"none\" if no prebuild is available. Latest values \"ready\" and \"in_progress\" indicate the prebuild availability status."
          }
        },
        "description": "A description of the machine powering a codespace."
      },
      "minimal-repository": {
        "type": "object",
        "title": "Minimal Repository",
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "examples": [
              1296269
            ]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World"
            ]
          },
          "fork": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "examples": [
              "Hello-World"
            ]
          },
          "size": {
            "type": "integer"
          },
          "forks": {
            "type": "integer",
            "examples": [
              0
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "git_url": {
            "type": "string"
          },
          "license": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "key": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "spdx_id": {
                "type": "string"
              }
            }
          },
          "node_id": {
            "type": "string",
            "examples": [
              "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
            ]
          },
          "private": {
            "type": "boolean"
          },
          "ssh_url": {
            "type": "string"
          },
          "svn_url": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          },
          "has_wiki": {
            "type": "boolean"
          },
          "homepage": {
            "type": [
              "string",
              "null"
            ]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World"
            ]
          },
          "keys_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
            ]
          },
          "language": {
            "type": [
              "string",
              "null"
            ]
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/tags"
            ]
          },
          "watchers": {
            "type": "integer",
            "examples": [
              0
            ]
          },
          "blobs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
            ]
          },
          "clone_url": {
            "type": "string"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/forks"
            ]
          },
          "full_name": {
            "type": "string",
            "examples": [
              "octocat/Hello-World"
            ]
          },
          "has_pages": {
            "type": "boolean"
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/hooks"
            ]
          },
          "pulls_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
            ]
          },
          "pushed_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "examples": [
              "2011-01-26T19:06:43Z"
            ]
          },
          "role_name": {
            "type": "string",
            "examples": [
              "admin"
            ]
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/teams"
            ]
          },
          "trees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
            ]
          },
          "created_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "examples": [
              "2011-01-26T19:01:12Z"
            ]
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/events"
            ]
          },
          "has_issues": {
            "type": "boolean"
          },
          "issues_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
            ]
          },
          "labels_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
            ]
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/merges"
            ]
          },
          "mirror_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "examples": [
              "2011-01-26T19:14:43Z"
            ]
          },
          "visibility": {
            "type": "string"
          },
          "archive_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
            ]
          },
          "commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
            ]
          },
          "compare_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "This your first repo!"
            ]
          },
          "forks_count": {
            "type": "integer"
          },
          "is_template": {
            "type": "boolean"
          },
          "open_issues": {
            "type": "integer",
            "examples": [
              0
            ]
          },
          "permissions": {
            "type": "object",
            "properties": {
              "pull": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "admin": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              }
            }
          },
          "branches_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
            ]
          },
          "comments_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
            ]
          },
          "contents_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
            ]
          },
          "git_refs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
            ]
          },
          "git_tags_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
            ]
          },
          "has_projects": {
            "type": "boolean"
          },
          "releases_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
            ]
          },
          "statuses_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
            ]
          },
          "allow_forking": {
            "type": "boolean"
          },
          "assignees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
            ]
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/downloads"
            ]
          },
          "has_downloads": {
            "type": "boolean"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/languages"
            ]
          },
          "network_count": {
            "type": "integer"
          },
          "default_branch": {
            "type": "string"
          },
          "milestones_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
            ]
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/stargazers"
            ]
          },
          "watchers_count": {
            "type": "integer"
          },
          "code_of_conduct": {
            "$ref": "#/components/schemas/code-of-conduct"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/deployments"
            ]
          },
          "git_commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
            ]
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscribers"
            ]
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contributors"
            ]
          },
          "issue_events_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
            ]
          },
          "stargazers_count": {
            "type": "integer"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscription"
            ]
          },
          "temp_clone_token": {
            "type": "string"
          },
          "collaborators_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
            ]
          },
          "issue_comment_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
            ]
          },
          "notifications_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
            ]
          },
          "open_issues_count": {
            "type": "integer"
          },
          "subscribers_count": {
            "type": "integer"
          },
          "template_repository": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/repository"
              }
            ]
          },
          "delete_branch_on_merge": {
            "type": "boolean"
          }
        },
        "description": "Minimal Repository"
      },
      "code-of-conduct": {
        "type": "object",
        "title": "Code Of Conduct",
        "required": [
          "url",
          "html_url",
          "key",
          "name"
        ],
        "properties": {
          "key": {
            "type": "string",
            "examples": [
              "contributor_covenant"
            ]
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/codes_of_conduct/contributor_covenant"
            ]
          },
          "body": {
            "type": "string",
            "examples": [
              "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
            ]
          },
          "name": {
            "type": "string",
            "examples": [
              "Contributor Covenant"
            ]
          },
          "html_url": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri"
          }
        },
        "description": "Code Of Conduct"
      },
      "repository": {
        "type": "object",
        "title": "Repository",
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "examples": [
              42
            ],
            "description": "Unique identifier of the repository"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://api.github.com/repos/octocat/Hello-World"
            ]
          },
          "fork": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "examples": [
              "Team Environment"
            ],
            "description": "The name of the repository."
          },
          "size": {
            "type": "integer",
            "examples": [
              108
            ]
          },
          "forks": {
            "type": "integer"
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "git_url": {
            "type": "string",
            "examples": [
              "git:github.com/octocat/Hello-World.git"
            ]
          },
          "license": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/license-simple"
              }
            ]
          },
          "node_id": {
            "type": "string",
            "examples": [
              "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
            ]
          },
          "private": {
            "type": "boolean",
            "default": false,
            "description": "Whether the repository is private or public."
          },
          "ssh_url": {
            "type": "string",
            "examples": [
              "git@github.com:octocat/Hello-World.git"
            ]
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://svn.github.com/octocat/Hello-World"
            ]
          },
          "archived": {
            "type": "boolean",
            "default": false,
            "description": "Whether the repository is archived."
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "has_wiki": {
            "type": "boolean",
            "default": true,
            "examples": [
              true
            ],
            "description": "Whether the wiki is enabled."
          },
          "homepage": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri",
            "examples": [
              "https://github.com"
            ]
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://github.com/octocat/Hello-World"
            ]
          },
          "keys_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
            ]
          },
          "language": {
            "type": [
              "string",
              "null"
            ]
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/tags"
            ]
          },
          "watchers": {
            "type": "integer"
          },
          "blobs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
            ]
          },
          "clone_url": {
            "type": "string",
            "examples": [
              "https://github.com/octocat/Hello-World.git"
            ]
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/forks"
            ]
          },
          "full_name": {
            "type": "string",
            "examples": [
              "octocat/Hello-World"
            ]
          },
          "has_pages": {
            "type": "boolean"
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/hooks"
            ]
          },
          "pulls_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
            ]
          },
          "pushed_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "examples": [
              "2011-01-26T19:06:43Z"
            ]
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/teams"
            ]
          },
          "trees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
            ]
          },
          "created_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "examples": [
              "2011-01-26T19:01:12Z"
            ]
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/events"
            ]
          },
          "has_issues": {
            "type": "boolean",
            "default": true,
            "examples": [
              true
            ],
            "description": "Whether issues are enabled."
          },
          "issues_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
            ]
          },
          "labels_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
            ]
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/merges"
            ]
          },
          "mirror_url": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri",
            "examples": [
              "git:git.example.com/octocat/Hello-World"
            ]
          },
          "starred_at": {
            "type": "string",
            "examples": [
              "\"2020-07-09T00:17:42Z\""
            ]
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "examples": [
              "2011-01-26T19:14:43Z"
            ]
          },
          "visibility": {
            "type": "string",
            "default": "public",
            "description": "The repository visibility: public, private, or internal."
          },
          "archive_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
            ]
          },
          "commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
            ]
          },
          "compare_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "This your first repo!"
            ]
          },
          "forks_count": {
            "type": "integer",
            "examples": [
              9
            ]
          },
          "is_template": {
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "description": "Whether this repository acts as a template that can be used to generate new repositories."
          },
          "open_issues": {
            "type": "integer"
          },
          "permissions": {
            "type": "object",
            "required": [
              "admin",
              "pull",
              "push"
            ],
            "properties": {
              "pull": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "admin": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              }
            }
          },
          "branches_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
            ]
          },
          "comments_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
            ]
          },
          "contents_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
            ]
          },
          "git_refs_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
            ]
          },
          "git_tags_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
            ]
          },
          "has_projects": {
            "type": "boolean",
            "default": true,
            "examples": [
              true
            ],
            "description": "Whether projects are enabled."
          },
          "organization": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/simple-user"
              }
            ]
          },
          "releases_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
            ]
          },
          "statuses_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
            ]
          },
          "allow_forking": {
            "type": "boolean",
            "description": "Whether to allow forking this repo"
          },
          "assignees_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
            ]
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/downloads"
            ]
          },
          "has_downloads": {
            "type": "boolean",
            "default": true,
            "examples": [
              true
            ],
            "description": "Whether downloads are enabled."
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/languages"
            ]
          },
          "master_branch": {
            "type": "string"
          },
          "network_count": {
            "type": "integer"
          },
          "default_branch": {
            "type": "string",
            "examples": [
              "master"
            ],
            "description": "The default branch of the repository."
          },
          "milestones_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
            ]
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/stargazers"
            ]
          },
          "watchers_count": {
            "type": "integer",
            "examples": [
              80
            ]
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/deployments"
            ]
          },
          "git_commits_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
            ]
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscribers"
            ]
          },
          "allow_auto_merge": {
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "description": "Whether to allow Auto-merge to be used on pull requests."
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/contributors"
            ]
          },
          "issue_events_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
            ]
          },
          "stargazers_count": {
            "type": "integer",
            "examples": [
              80
            ]
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/subscription"
            ]
          },
          "temp_clone_token": {
            "type": "string"
          },
          "collaborators_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
            ]
          },
          "issue_comment_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
            ]
          },
          "notifications_url": {
            "type": "string",
            "examples": [
              "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
            ]
          },
          "open_issues_count": {
            "type": "integer",
            "examples": [
              0
            ]
          },
          "subscribers_count": {
            "type": "integer"
          },
          "allow_merge_commit": {
            "type": "boolean",
            "default": true,
            "examples": [
              true
            ],
            "description": "Whether to allow merge commits for pull requests."
          },
          "allow_rebase_merge": {
            "type": "boolean",
            "default": true,
            "examples": [
              true
            ],
            "description": "Whether to allow rebase merges for pull requests."
          },
          "allow_squash_merge": {
            "type": "boolean",
            "default": true,
            "examples": [
              true
            ],
            "description": "Whether to allow squash merges for pull requests."
          },
          "allow_update_branch": {
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging."
          },
          "template_repository": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "id": {
                "type": "integer"
              },
              "url": {
                "type": "string"
              },
              "fork": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "login": {
                    "type": "string"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "repos_url": {
                    "type": "string"
                  },
                  "avatar_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "site_admin": {
                    "type": "boolean"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  }
                }
              },
              "topics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "git_url": {
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "private": {
                "type": "boolean"
              },
              "ssh_url": {
                "type": "string"
              },
              "svn_url": {
                "type": "string"
              },
              "archived": {
                "type": "boolean"
              },
              "disabled": {
                "type": "boolean"
              },
              "has_wiki": {
                "type": "boolean"
              },
              "homepage": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "keys_url": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "tags_url": {
                "type": "string"
              },
              "blobs_url": {
                "type": "string"
              },
              "clone_url": {
                "type": "string"
              },
              "forks_url": {
                "type": "string"
              },
              "full_name": {
                "type": "string"
              },
              "has_pages": {
                "type": "boolean"
              },
              "hooks_url": {
                "type": "string"
              },
              "pulls_url": {
                "type": "string"
              },
              "pushed_at": {
                "type": "string"
              },
              "teams_url": {
                "type": "string"
              },
              "trees_url": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "has_issues": {
                "type": "boolean"
              },
              "issues_url": {
                "type": "string"
              },
              "labels_url": {
                "type": "string"
              },
              "merges_url": {
                "type": "string"
              },
              "mirror_url": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "visibility": {
                "type": "string"
              },
              "archive_url": {
                "type": "string"
              },
              "commits_url": {
                "type": "string"
              },
              "compare_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "forks_count": {
                "type": "integer"
              },
              "is_template": {
                "type": "boolean"
              },
              "permissions": {
                "type": "object",
                "properties": {
                  "pull": {
                    "type": "boolean"
                  },
                  "push": {
                    "type": "boolean"
                  },
                  "admin": {
                    "type": "boolean"
                  },
                  "triage": {
                    "type": "boolean"
                  },
                  "maintain": {
                    "type": "boolean"
                  }
                }
              },
              "branches_url": {
                "type": "string"
              },
              "comments_url": {
                "type": "string"
              },
              "contents_url": {
                "type": "string"
              },
              "git_refs_url": {
                "type": "string"
              },
              "git_tags_url": {
                "type": "string"
              },
              "has_projects": {
                "type": "boolean"
              },
              "releases_url": {
                "type": "string"
              },
              "statuses_url": {
                "type": "string"
              },
              "assignees_url": {
                "type": "string"
              },
              "downloads_url": {
                "type": "string"
              },
              "has_downloads": {
                "type": "boolean"
              },
              "languages_url": {
                "type": "string"
              },
              "network_count": {
                "type": "integer"
              },
              "default_branch": {
                "type": "string"
              },
              "milestones_url": {
                "type": "string"
              },
              "stargazers_url": {
                "type": "string"
              },
              "watchers_count": {
                "type": "integer"
              },
              "deployments_url": {
                "type": "string"
              },
              "git_commits_url": {
                "type": "string"
              },
              "subscribers_url": {
                "type": "string"
              },
              "allow_auto_merge": {
                "type": "boolean"
              },
              "contributors_url": {
                "type": "string"
              },
              "issue_events_url": {
                "type": "string"
              },
              "stargazers_count": {
                "type": "integer"
              },
              "subscription_url": {
                "type": "string"
              },
              "temp_clone_token": {
                "type": "string"
              },
              "collaborators_url": {
                "type": "string"
              },
              "issue_comment_url": {
                "type": "string"
              },
              "notifications_url": {
                "type": "string"
              },
              "open_issues_count": {
                "type": "integer"
              },
              "subscribers_count": {
                "type": "integer"
              },
              "allow_merge_commit": {
                "type": "boolean"
              },
              "allow_rebase_merge": {
                "type": "boolean"
              },
              "allow_squash_merge": {
                "type": "boolean"
              },
              "allow_update_branch": {
                "type": "boolean"
              },
              "delete_branch_on_merge": {
                "type": "boolean"
              },
              "use_squash_pr_title_as_default": {
                "type": "boolean"
              }
            }
          },
          "delete_branch_on_merge": {
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "description": "Whether to delete head branches when pull requests are merged"
          },
          "use_squash_pr_title_as_default": {
            "type": "boolean",
            "default": false,
            "description": "Whether a squash merge commit can use the pull request title as default."
          }
        },
        "description": "A git repository"
      },
      "license-simple": {
        "type": "object",
        "title": "License Simple",
        "required": [
          "key",
          "name",
          "url",
          "spdx_id",
          "node_id"
        ],
        "properties": {
          "key": {
            "type": "string",
            "examples": [
              "mit"
            ]
          },
          "url": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri",
            "examples": [
              "https://api.github.com/licenses/mit"
            ]
          },
          "name": {
            "type": "string",
            "examples": [
              "MIT License"
            ]
          },
          "node_id": {
            "type": "string",
            "examples": [
              "MDc6TGljZW5zZW1pdA=="
            ]
          },
          "spdx_id": {
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "MIT"
            ]
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "description": "License Simple"
      }
    },
    "responses": {
      "requires_authentication": {
        "description": "Requires authentication",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "not_found": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      }
    },
    "examples": {
      "codespace": {
        "value": {
          "id": 1,
          "url": "https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q",
          "name": "monalisa-octocat-hello-world-g4wpq6h95q",
          "owner": {
            "id": 1,
            "url": "https://api.github.com/users/octocat",
            "type": "User",
            "login": "octocat",
            "node_id": "MDQ6VXNlcjE=",
            "html_url": "https://github.com/octocat",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "site_admin": false,
            "gravatar_id": "",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "received_events_url": "https://api.github.com/users/octocat/received_events"
          },
          "state": "Available",
          "machine": {
            "cpus": 4,
            "name": "standardLinux",
            "display_name": "4 cores, 8 GB RAM, 64 GB storage",
            "memory_in_bytes": 8589934592,
            "operating_system": "linux",
            "storage_in_bytes": 68719476736
          },
          "web_url": "https://monalisa-octocat-hello-world-g4wpq6h95q.github.dev",
          "location": "WestUs2",
          "prebuild": false,
          "stop_url": "https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/stop",
          "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1",
          "start_url": "https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/start",
          "created_at": "2021-10-14T00:53:30-06:00",
          "git_status": {
            "ref": "main",
            "ahead": 0,
            "behind": 0,
            "has_unpushed_changes": false,
            "has_uncommitted_changes": false
          },
          "repository": {
            "id": 1296269,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "fork": false,
            "name": "Hello-World",
            "owner": {
              "id": 1,
              "url": "https://api.github.com/users/octocat",
              "type": "User",
              "login": "octocat",
              "node_id": "MDQ6VXNlcjE=",
              "html_url": "https://github.com/octocat",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "site_admin": false,
              "gravatar_id": "",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "received_events_url": "https://api.github.com/users/octocat/received_events"
            },
            "git_url": "git:github.com/octocat/Hello-World.git",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "private": false,
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "html_url": "https://github.com/octocat/Hello-World",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "full_name": "octocat/Hello-World",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "description": "This your first repo!",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "updated_at": "2021-10-14T00:53:32-06:00",
          "last_used_at": "2021-10-14T00:53:30-06:00",
          "machines_url": "https://api.github.com/user/codespaces/monalisa-octocat-hello-world-g4wpq6h95q/machines",
          "billable_owner": {
            "id": 1,
            "url": "https://api.github.com/users/octocat",
            "type": "User",
            "login": "octocat",
            "node_id": "MDQ6VXNlcjE=",
            "html_url": "https://github.com/octocat",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "site_admin": false,
            "gravatar_id": "",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "received_events_url": "https://api.github.com/users/octocat/received_events"
          },
          "environment_id": "26a7c758-7299-4a73-b978-5a92a7ae98a0",
          "recent_folders": [],
          "devcontainer_path": ".devcontainer/devcontainer.json",
          "idle_timeout_minutes": 60
        }
      }
    },
    "parameters": {},
    "headers": {},
    "requestBodies": {}
  }
}