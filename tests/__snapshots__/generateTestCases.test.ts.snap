// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addEmailAddress 1`] = `
Map {
  "@types.ts" => "export type ApiHeroEndpoint<Params, ResponseBody, Headers = unknown> = {
  id: string;
  [key: string]: string | number;
};

/**
 * Basic Error
 */
export type BasicError = {
  url?: string;
  status?: string;
  message?: string;
  documentation_url?: string;
};

/**
 * Validation Error
 */
export type ValidationError = {
  errors?: Array<{
    code: string;
    field?: string;
    index?: number;
    value?: string | null | number | null | Array<string> | null;
    message?: string;
    resource?: string;
  }>;
  message: string;
  documentation_url: string;
};

/**
 * Email
 */
export type Email = {
  /**
   *
   * @example
   * \\"octocat@github.com\\"
   */
  email: string;

  /**
   *
   * @example
   * true
   */
  primary: boolean;

  /**
   *
   * @example
   * true
   */
  verified: boolean;

  /**
   *
   * @example
   * \\"public\\"
   */
  visibility: string;
};
",
  "users.ts" => "import { Email, ApiHeroEndpoint } from \\"./@types\\";

/** 
* @see https://docs.github.com/rest/reference/users#add-an-email-address-for-the-authenticated-user


* Add an email address for the authenticated user
* This endpoint is accessible with the \`user\` scope. 
*/
export const addEmailForAuthenticatedUser: ApiHeroEndpoint<
  {
    body?:
      | {
          /**
           * Adds one or more email addresses to your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an \`array\` of emails addresses directly, but we recommend that you pass an object using the \`emails\` key.
           */
          emails: Array<string>;
        }
      | Array<string>
      | string;
  },
  Array<Email>
> = {
  id: \\"users/add-email-for-authenticated-user\\",
};
",
  "index.ts" => "import * as users from \\"./users\\";

export { users };

export * from \\"./@types\\";
",
}
`;

exports[`createLabel 1`] = `
Map {
  "@types.ts" => "export type ApiHeroEndpoint<Params, ResponseBody, Headers = unknown> = {
  id: string;
  [key: string]: string | number;
};

/**
 * Basic Error
 */
export type BasicError = {
  url?: string;
  status?: string;
  message?: string;
  documentation_url?: string;
};

/**
 * Validation Error
 */
export type ValidationError = {
  errors?: Array<{
    code: string;
    field?: string;
    index?: number;
    value?: string | null | number | null | Array<string> | null;
    message?: string;
    resource?: string;
  }>;
  message: string;
  documentation_url: string;
};

/**
 * Color-coded labels help you categorize and filter your issues (just like labels in Gmail).
 * @example @see https://apihero.run/integrations/createLabel/examples/label
 */
export type Label = {
  /**
   *
   * @example
   * 208045946
   */
  id: number;

  /**
   * URL for the label
   *
   * @example
   * \\"https://api.github.com/repositories/42/labels/bug\\"
   */
  url: string;

  /**
   * The name of the label.
   *
   * @example
   * \\"bug\\"
   */
  name: string;

  /**
   * 6-character hex code, without the leading #, identifying the color
   *
   * @example
   * \\"FFFFFF\\"
   */
  color: string;

  /**
   *
   * @example
   * true
   */
  default: boolean;

  /**
   *
   * @example
   * \\"MDU6TGFiZWwyMDgwNDU5NDY=\\"
   */
  node_id: string;

  /**
   *
   * @example
   * \\"Something isn't working\\"
   */
  description: string;
};
",
  "issues.ts" => "import { Label, ApiHeroEndpoint } from \\"./@types\\";

/** 
* @see https://docs.github.com/rest/reference/issues#create-a-label


* Create a label
* @param repo - The name of the repository. The name is not case sensitive.
* @param owner - The account owner of the repository. The name is not case sensitive. 
*/
export const createLabel: ApiHeroEndpoint<
  {
    repo: string;
    owner: string;
    body: {
      /**
       * The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing \`:strawberry:\` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \\":strawberry:\\"). For a full list of available emoji and codes, see \\"[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet).\\"
       */
      name: string;

      /**
       * The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading \`#\`.
       */
      color?: string;

      /**
       * A short description of the label. Must be 100 characters or fewer.
       */
      description?: string;
    };
  },
  Label,
  { Location: string }
> = {
  id: \\"issues/create-label\\",
};
",
  "index.ts" => "import * as issues from \\"./issues\\";

export { issues };

export * from \\"./@types\\";
",
}
`;

exports[`getAuthenticatedApp 1`] = `
Map {
  "@types.ts" => "export type ApiHeroEndpoint<Params, ResponseBody, Headers = unknown> = {
  id: string;
  [key: string]: string | number;
};

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @example @see https://apihero.run/integrations/getAuthenticatedApp/examples/integration
 */
export type Integration = {
  /**
   * Unique identifier of the GitHub app
   *
   * @example
   * 37
   */
  id: number;

  /**
   *
   * @example
   * \\"\\\\\\"-----BEGIN RSA PRIVATE KEY-----\\\\\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\\\\\n-----END RSA PRIVATE KEY-----\\\\\\\\n\\\\\\"\\"
   */
  pem?: string;

  /**
   * The name of the GitHub app
   *
   * @example
   * \\"Probot Owners\\"
   */
  name: string;

  /**
   * The slug name of the GitHub app
   *
   * @example
   * \\"probot-owners\\"
   */
  slug?: string;
  owner: SimpleUser | null;

  /**
   * The list of events for the GitHub app
   *
   * @example
   * [\\"label\\"]
   *
   * @example
   * [\\"deployment\\"]
   */
  events: Array<string>;

  /**
   *
   * @example
   * \\"MDExOkludGVncmF0aW9uMQ==\\"
   */
  node_id: string;

  /**
   *
   * @example
   * \\"https://github.com/apps/super-ci\\"
   */
  html_url: string;

  /**
   *
   * @example
   * \\"\\\\\\"Iv1.25b5d1e65ffc4022\\\\\\"\\"
   */
  client_id?: string;

  /**
   *
   * @example
   * \\"2017-07-08T16:18:44-04:00\\"
   */
  created_at: string;

  /**
   *
   * @example
   * \\"2017-07-08T16:18:44-04:00\\"
   */
  updated_at: string;

  /**
   *
   * @example
   * \\"The description of the app.\\"
   */
  description: string;

  /**
   * The set of permissions for the GitHub app
   */
  permissions: {
    checks?: string;
    issues?: string;
    contents?: string;
    metadata?: string;
    deployments?: string;

    [key: string]: string;
  };

  /**
   *
   * @example
   * \\"https://example.com\\"
   */
  external_url: string;

  /**
   *
   * @example
   * \\"\\\\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\\\\"\\"
   */
  client_secret?: string;

  /**
   *
   * @example
   * \\"\\\\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\\\\"\\"
   */
  webhook_secret?: string;

  /**
   * The number of installations associated with the GitHub app
   *
   * @example
   * 5
   */
  installations_count?: number;
};

/**
 * Simple User
 */
export type SimpleUser = {
  /**
   *
   * @example
   * 1
   */
  id: number;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat\\"
   */
  url: string;
  name?: string;

  /**
   *
   * @example
   * \\"User\\"
   */
  type: string;
  email?: string;

  /**
   *
   * @example
   * \\"octocat\\"
   */
  login: string;

  /**
   *
   * @example
   * \\"MDQ6VXNlcjE=\\"
   */
  node_id: string;

  /**
   *
   * @example
   * \\"https://github.com/octocat\\"
   */
  html_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/gists{/gist_id}\\"
   */
  gists_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/repos\\"
   */
  repos_url: string;

  /**
   *
   * @example
   * \\"https://github.com/images/error/octocat_happy.gif\\"
   */
  avatar_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/events{/privacy}\\"
   */
  events_url: string;
  site_admin: boolean;

  /**
   *
   * @example
   * \\"\\\\\\"2020-07-09T00:17:55Z\\\\\\"\\"
   */
  starred_at?: string;

  /**
   *
   * @example
   * \\"41d064eb2195891e12d0413f63227ea7\\"
   */
  gravatar_id: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/starred{/owner}{/repo}\\"
   */
  starred_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/followers\\"
   */
  followers_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/following{/other_user}\\"
   */
  following_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/orgs\\"
   */
  organizations_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/subscriptions\\"
   */
  subscriptions_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/received_events\\"
   */
  received_events_url: string;
};
",
  "apps.ts" => "import { Integration, ApiHeroEndpoint } from \\"./@types\\";

/** 
* @see https://docs.github.com/rest/reference/apps#get-the-authenticated-app


* Get the authenticated app
* Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the \`installations_count\` in the response. For more details about your app's installations, see the \\"[List installations for the authenticated app](https://docs.github.com/rest/reference/apps#list-installations-for-the-authenticated-app)\\" endpoint.
 * 
 * You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. 
*/
export const getAuthenticated: ApiHeroEndpoint<never, Integration> = {
  id: \\"apps/get-authenticated\\",
};
",
  "index.ts" => "import * as apps from \\"./apps\\";

export { apps };

export * from \\"./@types\\";
",
}
`;

exports[`listPublicEmails 1`] = `
Map {
  "@types.ts" => "export type ApiHeroEndpoint<Params, ResponseBody, Headers = unknown> = {
  id: string;
  [key: string]: string | number;
};

/**
 * Email
 */
export type Email = {
  /**
   *
   * @example
   * \\"octocat@github.com\\"
   */
  email: string;

  /**
   *
   * @example
   * true
   */
  primary: boolean;

  /**
   *
   * @example
   * true
   */
  verified: boolean;

  /**
   *
   * @example
   * \\"public\\"
   */
  visibility: string;
};

/**
 * Basic Error
 */
export type BasicError = {
  url?: string;
  status?: string;
  message?: string;
  documentation_url?: string;
};
",
  "users.ts" => "import { Email, Link, ApiHeroEndpoint } from \\"./@types\\";

/** 
* @see https://docs.github.com/rest/reference/users#list-public-email-addresses-for-the-authenticated-user


* List public email addresses for the authenticated user
* Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the \`user:email\` scope.
* @param [perPage=30] - The number of results per page (max 100).
* @param [page=1] - Page number of the results to fetch. 
*/
export const listPublicEmailsForAuthenticatedUser: ApiHeroEndpoint<
  { perPage?: number; page?: number },
  Array<Email>,
  { Link: Link }
> = {
  id: \\"users/list-public-emails-for-authenticated-user\\",
};
",
  "index.ts" => "import * as users from \\"./users\\";

export { users };

export * from \\"./@types\\";
",
}
`;

exports[`startUserMigration 1`] = `
Map {
  "@types.ts" => "export type ApiHeroEndpoint<Params, ResponseBody, Headers = unknown> = {
  id: string;
  [key: string]: string | number;
};

/**
 * Basic Error
 */
export type BasicError = {
  url?: string;
  status?: string;
  message?: string;
  documentation_url?: string;
};

/**
 * Validation Error
 */
export type ValidationError = {
  errors?: Array<{
    code: string;
    field?: string;
    index?: number;
    value?: string | null | number | null | Array<string> | null;
    message?: string;
    resource?: string;
  }>;
  message: string;
  documentation_url: string;
};

/**
 * A migration.
 */
export type Migration = {
  /**
   *
   * @example
   * 79
   */
  id: number;

  /**
   *
   * @example
   * \\"https://api.github.com/orgs/octo-org/migrations/79\\"
   */
  url: string;

  /**
   *
   * @example
   * \\"0b989ba4-242f-11e5-81e1-c7b6966d2516\\"
   */
  guid: string;
  owner: SimpleUser | null;

  /**
   *
   * @example
   * \\"pending\\"
   */
  state: string;
  exclude?: Array<{}>;
  node_id: string;

  /**
   *
   * @example
   * \\"2015-07-06T15:33:38-07:00\\"
   */
  created_at: string;

  /**
   *
   * @example
   * \\"2015-07-06T15:33:38-07:00\\"
   */
  updated_at: string;
  archive_url?: string;
  repositories: Array<Repository>;
  exclude_git_data: boolean;
  exclude_metadata: boolean;
  exclude_releases: boolean;

  /**
   *
   * @example
   * true
   */
  lock_repositories: boolean;
  org_metadata_only: boolean;
  exclude_attachments: boolean;
  exclude_owner_projects: boolean;
};

/**
 * Simple User
 */
export type SimpleUser = {
  /**
   *
   * @example
   * 1
   */
  id: number;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat\\"
   */
  url: string;
  name?: string;

  /**
   *
   * @example
   * \\"User\\"
   */
  type: string;
  email?: string;

  /**
   *
   * @example
   * \\"octocat\\"
   */
  login: string;

  /**
   *
   * @example
   * \\"MDQ6VXNlcjE=\\"
   */
  node_id: string;

  /**
   *
   * @example
   * \\"https://github.com/octocat\\"
   */
  html_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/gists{/gist_id}\\"
   */
  gists_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/repos\\"
   */
  repos_url: string;

  /**
   *
   * @example
   * \\"https://github.com/images/error/octocat_happy.gif\\"
   */
  avatar_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/events{/privacy}\\"
   */
  events_url: string;
  site_admin: boolean;

  /**
   *
   * @example
   * \\"\\\\\\"2020-07-09T00:17:55Z\\\\\\"\\"
   */
  starred_at?: string;

  /**
   *
   * @example
   * \\"41d064eb2195891e12d0413f63227ea7\\"
   */
  gravatar_id: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/starred{/owner}{/repo}\\"
   */
  starred_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/followers\\"
   */
  followers_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/following{/other_user}\\"
   */
  following_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/orgs\\"
   */
  organizations_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/subscriptions\\"
   */
  subscriptions_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/received_events\\"
   */
  received_events_url: string;
};

/**
 * A git repository
 */
export type Repository = {
  /**
   * Unique identifier of the repository
   *
   * @example
   * 42
   */
  id: number;

  /**
   *
   * @example
   * \\"https://api.github.com/repos/octocat/Hello-World\\"
   */
  url: string;
  fork: boolean;

  /**
   * The name of the repository.
   *
   * @example
   * \\"Team Environment\\"
   */
  name: string;

  /**
   *
   * @example
   * 108
   */
  size: number;
  forks: number;
  owner: SimpleUser;
  topics?: Array<string>;

  /**
   *
   * @example
   * \\"git:github.com/octocat/Hello-World.git\\"
   */
  git_url: string;
  license: LicenseSimple | null;

  /**
   *
   * @example
   * \\"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\\"
   */
  node_id: string;

  /**
   * Whether the repository is private or public.
   */
  private: boolean;

  /**
   *
   * @example
   * \\"git@github.com:octocat/Hello-World.git\\"
   */
  ssh_url: string;

  /**
   *
   * @example
   * \\"https://svn.github.com/octocat/Hello-World\\"
   */
  svn_url: string;

  /**
   * Whether the repository is archived.
   */
  archived: boolean;

  /**
   * Returns whether or not this repository disabled.
   */
  disabled: boolean;

  /**
   * Whether the wiki is enabled.
   *
   * @example
   * true
   */
  has_wiki: boolean;

  /**
   *
   * @example
   * \\"https://github.com\\"
   */
  homepage: string;

  /**
   *
   * @example
   * \\"https://github.com/octocat/Hello-World\\"
   */
  html_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\\"
   */
  keys_url: string;
  language: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/tags\\"
   */
  tags_url: string;
  watchers: number;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\\"
   */
  blobs_url: string;

  /**
   *
   * @example
   * \\"https://github.com/octocat/Hello-World.git\\"
   */
  clone_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/forks\\"
   */
  forks_url: string;

  /**
   *
   * @example
   * \\"octocat/Hello-World\\"
   */
  full_name: string;
  has_pages: boolean;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/hooks\\"
   */
  hooks_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\\"
   */
  pulls_url: string;

  /**
   *
   * @example
   * \\"2011-01-26T19:06:43Z\\"
   */
  pushed_at: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/teams\\"
   */
  teams_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\\"
   */
  trees_url: string;

  /**
   *
   * @example
   * \\"2011-01-26T19:01:12Z\\"
   */
  created_at: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/events\\"
   */
  events_url: string;

  /**
   * Whether issues are enabled.
   *
   * @example
   * true
   */
  has_issues: boolean;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/issues{/number}\\"
   */
  issues_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/labels{/name}\\"
   */
  labels_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/merges\\"
   */
  merges_url: string;

  /**
   *
   * @example
   * \\"git:git.example.com/octocat/Hello-World\\"
   */
  mirror_url: string;

  /**
   *
   * @example
   * \\"\\\\\\"2020-07-09T00:17:42Z\\\\\\"\\"
   */
  starred_at?: string;

  /**
   *
   * @example
   * \\"2011-01-26T19:14:43Z\\"
   */
  updated_at: string;

  /**
   * The repository visibility: public, private, or internal.
   */
  visibility?: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\\"
   */
  archive_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\\"
   */
  commits_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\\"
   */
  compare_url: string;

  /**
   *
   * @example
   * \\"This your first repo!\\"
   */
  description: string;

  /**
   *
   * @example
   * 9
   */
  forks_count: number;

  /**
   * Whether this repository acts as a template that can be used to generate new repositories.
   *
   * @example
   * true
   */
  is_template?: boolean;
  open_issues: number;
  permissions?: {
    pull: boolean;
    push: boolean;
    admin: boolean;
    triage?: boolean;
    maintain?: boolean;
  };

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\\"
   */
  branches_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/comments{/number}\\"
   */
  comments_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\\"
   */
  contents_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\\"
   */
  git_refs_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\\"
   */
  git_tags_url: string;

  /**
   * Whether projects are enabled.
   *
   * @example
   * true
   */
  has_projects: boolean;
  organization?: SimpleUser | null;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/releases{/id}\\"
   */
  releases_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\\"
   */
  statuses_url: string;

  /**
   * Whether to allow forking this repo
   */
  allow_forking?: boolean;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\\"
   */
  assignees_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/downloads\\"
   */
  downloads_url: string;

  /**
   * Whether downloads are enabled.
   *
   * @example
   * true
   */
  has_downloads: boolean;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/languages\\"
   */
  languages_url: string;
  master_branch?: string;
  network_count?: number;

  /**
   * The default branch of the repository.
   *
   * @example
   * \\"master\\"
   */
  default_branch: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\\"
   */
  milestones_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/stargazers\\"
   */
  stargazers_url: string;

  /**
   *
   * @example
   * 80
   */
  watchers_count: number;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/deployments\\"
   */
  deployments_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\\"
   */
  git_commits_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/subscribers\\"
   */
  subscribers_url: string;

  /**
   * Whether to allow Auto-merge to be used on pull requests.
   *
   * @example
   * false
   */
  allow_auto_merge?: boolean;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/contributors\\"
   */
  contributors_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\\"
   */
  issue_events_url: string;

  /**
   *
   * @example
   * 80
   */
  stargazers_count: number;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/subscription\\"
   */
  subscription_url: string;
  temp_clone_token?: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\\"
   */
  collaborators_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\\"
   */
  issue_comment_url: string;

  /**
   *
   * @example
   * \\"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\\"
   */
  notifications_url: string;

  /**
   *
   * @example
   * 0
   */
  open_issues_count: number;
  subscribers_count?: number;

  /**
   * Whether to allow merge commits for pull requests.
   *
   * @example
   * true
   */
  allow_merge_commit?: boolean;

  /**
   * Whether to allow rebase merges for pull requests.
   *
   * @example
   * true
   */
  allow_rebase_merge?: boolean;

  /**
   * Whether to allow squash merges for pull requests.
   *
   * @example
   * true
   */
  allow_squash_merge?: boolean;

  /**
   * Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
   *
   * @example
   * false
   */
  allow_update_branch?: boolean;
  template_repository?: {
    id?: number;
    url?: string;
    fork?: boolean;
    name?: string;
    size?: number;
    owner?: {
      id?: number;
      url?: string;
      type?: string;
      login?: string;
      node_id?: string;
      html_url?: string;
      gists_url?: string;
      repos_url?: string;
      avatar_url?: string;
      events_url?: string;
      site_admin?: boolean;
      gravatar_id?: string;
      starred_url?: string;
      followers_url?: string;
      following_url?: string;
      organizations_url?: string;
      subscriptions_url?: string;
      received_events_url?: string;
    };
    topics?: Array<string>;
    git_url?: string;
    node_id?: string;
    private?: boolean;
    ssh_url?: string;
    svn_url?: string;
    archived?: boolean;
    disabled?: boolean;
    has_wiki?: boolean;
    homepage?: string;
    html_url?: string;
    keys_url?: string;
    language?: string;
    tags_url?: string;
    blobs_url?: string;
    clone_url?: string;
    forks_url?: string;
    full_name?: string;
    has_pages?: boolean;
    hooks_url?: string;
    pulls_url?: string;
    pushed_at?: string;
    teams_url?: string;
    trees_url?: string;
    created_at?: string;
    events_url?: string;
    has_issues?: boolean;
    issues_url?: string;
    labels_url?: string;
    merges_url?: string;
    mirror_url?: string;
    updated_at?: string;
    visibility?: string;
    archive_url?: string;
    commits_url?: string;
    compare_url?: string;
    description?: string;
    forks_count?: number;
    is_template?: boolean;
    permissions?: {
      pull?: boolean;
      push?: boolean;
      admin?: boolean;
      triage?: boolean;
      maintain?: boolean;
    };
    branches_url?: string;
    comments_url?: string;
    contents_url?: string;
    git_refs_url?: string;
    git_tags_url?: string;
    has_projects?: boolean;
    releases_url?: string;
    statuses_url?: string;
    assignees_url?: string;
    downloads_url?: string;
    has_downloads?: boolean;
    languages_url?: string;
    network_count?: number;
    default_branch?: string;
    milestones_url?: string;
    stargazers_url?: string;
    watchers_count?: number;
    deployments_url?: string;
    git_commits_url?: string;
    subscribers_url?: string;
    allow_auto_merge?: boolean;
    contributors_url?: string;
    issue_events_url?: string;
    stargazers_count?: number;
    subscription_url?: string;
    temp_clone_token?: string;
    collaborators_url?: string;
    issue_comment_url?: string;
    notifications_url?: string;
    open_issues_count?: number;
    subscribers_count?: number;
    allow_merge_commit?: boolean;
    allow_rebase_merge?: boolean;
    allow_squash_merge?: boolean;
    allow_update_branch?: boolean;
    delete_branch_on_merge?: boolean;
    use_squash_pr_title_as_default?: boolean;
  };

  /**
   * Whether to delete head branches when pull requests are merged
   *
   * @example
   * false
   */
  delete_branch_on_merge?: boolean;

  /**
   * Whether a squash merge commit can use the pull request title as default.
   */
  use_squash_pr_title_as_default?: boolean;
};

/**
 * License Simple
 */
export type LicenseSimple = {
  /**
   *
   * @example
   * \\"mit\\"
   */
  key: string;

  /**
   *
   * @example
   * \\"https://api.github.com/licenses/mit\\"
   */
  url: string;

  /**
   *
   * @example
   * \\"MIT License\\"
   */
  name: string;

  /**
   *
   * @example
   * \\"MDc6TGljZW5zZW1pdA==\\"
   */
  node_id: string;

  /**
   *
   * @example
   * \\"MIT\\"
   */
  spdx_id: string;
  html_url?: string;
};
",
  "migrations.ts" => "import { Migration, ApiHeroEndpoint } from \\"./@types\\";

/** 
* @see https://docs.github.com/rest/reference/migrations#start-a-user-migration


* Start a user migration
* Initiates the generation of a user migration archive. 
*/
export const startForAuthenticatedUser: ApiHeroEndpoint<
  {
    body: {
      /**
       * Exclude attributes from the API response to improve performance
       *
       * @example
       * [\\"repositories\\"]
       */
      exclude?: Array<\\"repositories\\">;

      /**
       * Repository path, owner and name
       *
       * @example
       * \\"acme/widgets\\"
       */
      repositories: Array<string>;

      /**
       * Indicates whether the repository git data should be excluded from the migration.
       *
       * @example
       * true
       */
      exclude_git_data?: boolean;

      /**
       * Indicates whether metadata should be excluded and only git source should be included for the migration.
       *
       * @example
       * true
       */
      exclude_metadata?: boolean;

      /**
       * Do not include releases in the migration
       *
       * @example
       * true
       */
      exclude_releases?: boolean;

      /**
       * Lock the repositories being migrated at the start of the migration
       *
       * @example
       * true
       */
      lock_repositories?: boolean;

      /**
       * Indicates whether this should only include organization metadata (repositories array should be empty and will ignore other flags).
       *
       * @example
       * true
       */
      org_metadata_only?: boolean;

      /**
       * Do not include attachments in the migration
       *
       * @example
       * true
       */
      exclude_attachments?: boolean;

      /**
       * Indicates whether projects owned by the organization or users should be excluded.
       *
       * @example
       * true
       */
      exclude_owner_projects?: boolean;
    };
  },
  Migration
> = {
  id: \\"migrations/start-for-authenticated-user\\",
};
",
  "index.ts" => "import * as migrations from \\"./migrations\\";

export { migrations };

export * from \\"./@types\\";
",
}
`;
