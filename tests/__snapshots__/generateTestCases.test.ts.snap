// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addEmailAddress 1`] = `
Map {
  "@types.ts" => "export type ApiHeroEndpoint<Params, ResponseBody, Headers = unknown> = {
  id: string;
  [key: string]: string | number;
};

/**
 * Basic Error
 */
export type BasicError = {
  url?: string;
  status?: string;
  message?: string;
  documentation_url?: string;
};

/**
 * Validation Error
 */
export type ValidationError = {
  errors?: Array<{
    code: string;
    field?: string;
    index?: number;
    value?: string | null | number | null | Array<string> | null;
    message?: string;
    resource?: string;
  }>;
  message: string;
  documentation_url: string;
};

/**
 * Email
 */
export type Email = {
  /**
   *
   * @example
   * \\"octocat@github.com\\"
   */
  email: string;

  /**
   *
   * @example
   * true
   */
  primary: boolean;

  /**
   *
   * @example
   * true
   */
  verified: boolean;

  /**
   *
   * @example
   * \\"public\\"
   */
  visibility: string;
};
",
  "users.ts" => "import { Email, ApiHeroEndpoint } from \\"./@types\\";

/** 
* @see https://docs.github.com/rest/reference/users#add-an-email-address-for-the-authenticated-user


* Add an email address for the authenticated user
* This endpoint is accessible with the \`user\` scope. 
*/
export const addEmailForAuthenticatedUser: ApiHeroEndpoint<
  {
    body?:
      | {
          /**
           * Adds one or more email addresses to your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an \`array\` of emails addresses directly, but we recommend that you pass an object using the \`emails\` key.
           */
          emails: Array<string>;
        }
      | Array<string>
      | string;
  },
  Array<Email>
> = {
  id: \\"users/add-email-for-authenticated-user\\",
};
",
  "index.ts" => "import * as users from \\"./users\\";

export { users };

export * from \\"./@types\\";
",
}
`;

exports[`createLabel 1`] = `
Map {
  "@types.ts" => "export type ApiHeroEndpoint<Params, ResponseBody, Headers = unknown> = {
  id: string;
  [key: string]: string | number;
};

/**
 * Basic Error
 */
export type BasicError = {
  url?: string;
  status?: string;
  message?: string;
  documentation_url?: string;
};

/**
 * Validation Error
 */
export type ValidationError = {
  errors?: Array<{
    code: string;
    field?: string;
    index?: number;
    value?: string | null | number | null | Array<string> | null;
    message?: string;
    resource?: string;
  }>;
  message: string;
  documentation_url: string;
};

/**
 * Color-coded labels help you categorize and filter your issues (just like labels in Gmail).
 * @example @see https://apihero.run/integrations/createLabel/examples/label
 */
export type Label = {
  /**
   *
   * @example
   * 208045946
   */
  id: number;

  /**
   * URL for the label
   *
   * @example
   * \\"https://api.github.com/repositories/42/labels/bug\\"
   */
  url: string;

  /**
   * The name of the label.
   *
   * @example
   * \\"bug\\"
   */
  name: string;

  /**
   * 6-character hex code, without the leading #, identifying the color
   *
   * @example
   * \\"FFFFFF\\"
   */
  color: string;

  /**
   *
   * @example
   * true
   */
  default: boolean;

  /**
   *
   * @example
   * \\"MDU6TGFiZWwyMDgwNDU5NDY=\\"
   */
  node_id: string;

  /**
   *
   * @example
   * \\"Something isn't working\\"
   */
  description: string;
};
",
  "issues.ts" => "import { Label, ApiHeroEndpoint } from \\"./@types\\";

/** 
* @see https://docs.github.com/rest/reference/issues#create-a-label


* Create a label
* @param repo - The name of the repository. The name is not case sensitive.
* @param owner - The account owner of the repository. The name is not case sensitive. 
*/
export const createLabel: ApiHeroEndpoint<
  {
    repo: string;
    owner: string;
    body: {
      /**
       * The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing \`:strawberry:\` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \\":strawberry:\\"). For a full list of available emoji and codes, see \\"[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet).\\"
       */
      name: string;

      /**
       * The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading \`#\`.
       */
      color?: string;

      /**
       * A short description of the label. Must be 100 characters or fewer.
       */
      description?: string;
    };
  },
  Label,
  { Location: string }
> = {
  id: \\"issues/create-label\\",
};
",
  "index.ts" => "import * as issues from \\"./issues\\";

export { issues };

export * from \\"./@types\\";
",
}
`;

exports[`getAuthenticatedApp 1`] = `
Map {
  "@types.ts" => "export type ApiHeroEndpoint<Params, ResponseBody, Headers = unknown> = {
  id: string;
  [key: string]: string | number;
};

/**
 * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * @example @see https://apihero.run/integrations/getAuthenticatedApp/examples/integration
 */
export type Integration = {
  /**
   * Unique identifier of the GitHub app
   *
   * @example
   * 37
   */
  id: number;

  /**
   *
   * @example
   * \\"\\\\\\"-----BEGIN RSA PRIVATE KEY-----\\\\\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\\\\\n-----END RSA PRIVATE KEY-----\\\\\\\\n\\\\\\"\\"
   */
  pem?: string;

  /**
   * The name of the GitHub app
   *
   * @example
   * \\"Probot Owners\\"
   */
  name: string;

  /**
   * The slug name of the GitHub app
   *
   * @example
   * \\"probot-owners\\"
   */
  slug?: string;
  owner: SimpleUser | null;

  /**
   * The list of events for the GitHub app
   *
   * @example
   * \\"label\\"
   *
   * @example
   * \\"deployment\\"
   */
  events: Array<string>;

  /**
   *
   * @example
   * \\"MDExOkludGVncmF0aW9uMQ==\\"
   */
  node_id: string;

  /**
   *
   * @example
   * \\"https://github.com/apps/super-ci\\"
   */
  html_url: string;

  /**
   *
   * @example
   * \\"\\\\\\"Iv1.25b5d1e65ffc4022\\\\\\"\\"
   */
  client_id?: string;

  /**
   *
   * @example
   * \\"2017-07-08T16:18:44-04:00\\"
   */
  created_at: string;

  /**
   *
   * @example
   * \\"2017-07-08T16:18:44-04:00\\"
   */
  updated_at: string;

  /**
   *
   * @example
   * \\"The description of the app.\\"
   */
  description: string;

  /**
   * The set of permissions for the GitHub app
   */
  permissions: {
    checks?: string;
    issues?: string;
    contents?: string;
    metadata?: string;
    deployments?: string;

    [key: string]: string;
  };

  /**
   *
   * @example
   * \\"https://example.com\\"
   */
  external_url: string;

  /**
   *
   * @example
   * \\"\\\\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\\\\"\\"
   */
  client_secret?: string;

  /**
   *
   * @example
   * \\"\\\\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\\\\"\\"
   */
  webhook_secret?: string;

  /**
   * The number of installations associated with the GitHub app
   *
   * @example
   * 5
   */
  installations_count?: number;
};

/**
 * Simple User
 */
export type SimpleUser = {
  /**
   *
   * @example
   * 1
   */
  id: number;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat\\"
   */
  url: string;
  name?: string;

  /**
   *
   * @example
   * \\"User\\"
   */
  type: string;
  email?: string;

  /**
   *
   * @example
   * \\"octocat\\"
   */
  login: string;

  /**
   *
   * @example
   * \\"MDQ6VXNlcjE=\\"
   */
  node_id: string;

  /**
   *
   * @example
   * \\"https://github.com/octocat\\"
   */
  html_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/gists{/gist_id}\\"
   */
  gists_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/repos\\"
   */
  repos_url: string;

  /**
   *
   * @example
   * \\"https://github.com/images/error/octocat_happy.gif\\"
   */
  avatar_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/events{/privacy}\\"
   */
  events_url: string;
  site_admin: boolean;

  /**
   *
   * @example
   * \\"\\\\\\"2020-07-09T00:17:55Z\\\\\\"\\"
   */
  starred_at?: string;

  /**
   *
   * @example
   * \\"41d064eb2195891e12d0413f63227ea7\\"
   */
  gravatar_id: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/starred{/owner}{/repo}\\"
   */
  starred_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/followers\\"
   */
  followers_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/following{/other_user}\\"
   */
  following_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/orgs\\"
   */
  organizations_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/subscriptions\\"
   */
  subscriptions_url: string;

  /**
   *
   * @example
   * \\"https://api.github.com/users/octocat/received_events\\"
   */
  received_events_url: string;
};
",
  "apps.ts" => "import { Integration, ApiHeroEndpoint } from \\"./@types\\";

/** 
* @see https://docs.github.com/rest/reference/apps#get-the-authenticated-app


* Get the authenticated app
* Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the \`installations_count\` in the response. For more details about your app's installations, see the \\"[List installations for the authenticated app](https://docs.github.com/rest/reference/apps#list-installations-for-the-authenticated-app)\\" endpoint.
 * 
 * You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. 
*/
export const getAuthenticated: ApiHeroEndpoint<never, Integration> = {
  id: \\"apps/get-authenticated\\",
};
",
  "index.ts" => "import * as apps from \\"./apps\\";

export { apps };

export * from \\"./@types\\";
",
}
`;

exports[`listPublicEmails 1`] = `
Map {
  "@types.ts" => "export type ApiHeroEndpoint<Params, ResponseBody, Headers = unknown> = {
  id: string;
  [key: string]: string | number;
};

/**
 * Email
 */
export type Email = {
  /**
   *
   * @example
   * \\"octocat@github.com\\"
   */
  email: string;

  /**
   *
   * @example
   * true
   */
  primary: boolean;

  /**
   *
   * @example
   * true
   */
  verified: boolean;

  /**
   *
   * @example
   * \\"public\\"
   */
  visibility: string;
};

/**
 * Basic Error
 */
export type BasicError = {
  url?: string;
  status?: string;
  message?: string;
  documentation_url?: string;
};
",
  "users.ts" => "import { Email, Link, ApiHeroEndpoint } from \\"./@types\\";

/** 
* @see https://docs.github.com/rest/reference/users#list-public-email-addresses-for-the-authenticated-user


* List public email addresses for the authenticated user
* Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the \`user:email\` scope.
* @param [perPage=30] - The number of results per page (max 100).
* @param [page=1] - Page number of the results to fetch. 
*/
export const listPublicEmailsForAuthenticatedUser: ApiHeroEndpoint<
  { perPage?: number; page?: number },
  Array<Email>,
  { Link: Link }
> = {
  id: \\"users/list-public-emails-for-authenticated-user\\",
};
",
  "index.ts" => "import * as users from \\"./users\\";

export { users };

export * from \\"./@types\\";
",
}
`;
