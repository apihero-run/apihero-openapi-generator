// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`code generation test cases 1`] = `
Map {
  "@types.ts" => "export type ApiHeroEndpoint<Params, ResponseBody, Headers = unknown> = {
  id: string;
  [key: string]: string | number;
};

/**
 * Basic Error
 */
export type BasicError = {
  url?: string;
  status?: string;
  message?: string;
  documentation_url?: string;
};

/**
 * Validation Error
 */
export type ValidationError = {
  errors?: Array<{
    code: string;
    field?: string;
    index?: number;
    value?: string | null | number | null | Array<string> | null;
    message?: string;
    resource?: string;
  }>;
  message: string;
  documentation_url: string;
};

/**
 * Color-coded labels help you categorize and filter your issues (just like labels in Gmail).
 * @example @see https://apihero.run/integrations/createLabel/examples/label
 */
export type Label = {
  /**
   *
   * @example
   * 208045946
   */
  id: number;

  /**
   * URL for the label
   *
   * @example
   * \\"https://api.github.com/repositories/42/labels/bug\\"
   */
  url: string;

  /**
   * The name of the label.
   *
   * @example
   * \\"bug\\"
   */
  name: string;

  /**
   * 6-character hex code, without the leading #, identifying the color
   *
   * @example
   * \\"FFFFFF\\"
   */
  color: string;

  /**
   *
   * @example
   * true
   */
  default: boolean;

  /**
   *
   * @example
   * \\"MDU6TGFiZWwyMDgwNDU5NDY=\\"
   */
  node_id: string;

  /**
   *
   * @example
   * \\"Something isn't working\\"
   */
  description: string;
};
",
  "issues.ts" => "import { Label, ApiHeroEndpoint } from \\"./@types\\";

/** 
* @see https://docs.github.com/rest/reference/issues#create-a-label


* Create a label

* @param repo - The name of the repository. The name is not case sensitive.
* @param owner - The account owner of the repository. The name is not case sensitive.
* @param body 

* @param body.name - The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing \`:strawberry:\` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \\":strawberry:\\"). For a full list of available emoji and codes, see \\"[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet).\\"
* @param body.color - The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading \`#\`.
* @param body.description - A short description of the label. Must be 100 characters or fewer. 
*/
export const createLabel: ApiHeroEndpoint<
  {
    repo: string;
    owner: string;
    body: {
      /**
       * The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing \`:strawberry:\` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \\":strawberry:\\"). For a full list of available emoji and codes, see \\"[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet).\\"
       */
      name: string;

      /**
       * The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading \`#\`.
       */
      color?: string;

      /**
       * A short description of the label. Must be 100 characters or fewer.
       */
      description?: string;
    };
  },
  Label,
  { Location: string }
> = {
  id: \\"issues/create-label\\",
};
",
  "index.ts" => "import * as issues from \\"./issues\\";

export { issues };

export * from \\"./@types\\";
",
}
`;
